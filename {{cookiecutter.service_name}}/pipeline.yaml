AWSTemplateFormatVersion: 2010-09-09
Description: >

    This template generates a generic 3-environment CI/CD Pipeline for Serverless Apps that use SAM (Serverless Application Model).
    Charges may apply for AWS Services utilized - Below are a summary for your convenience:

      AWS CodeCommit (Optional): Manages and Stores your service source code (Git repository)
      Amazon S3: Manages CodeBuild Artifacts as well as Cache for subsequent runs when defined in the build spec
      AWS CodeBuild: Manages and Runs builds specified under buildspec.yaml
      AWS CodePipeline: Manages and Runs the Continuous Integration and Continuous Deployment pipeline
      AWS CloudFormation: Manages SAM templates and creates the Infrastructure necessary for each environment
      AWS IAM: Manages Identity and Access across Services outlined above


Parameters:
  ServiceName:
    Type: String
    Description: 'Name of service'

  Environment:
    Type: String
    Description: 'Deployment environment'
    Default: 'prime'

  PipelineServiceRoleArn:
    Type: AWS::SSM::Parameter::Value<String>
    Description: 'IAM role ARN for pipeline'
    Default: '/deploy-pipeline/prime/PipelineServiceRoleArn'

  BranchName:
    Type: String
    Description: 'Name of branch to trigger pipeline'
    Default: 'develop'

  BuildImage:
    Type: String
    Description: 'CodeBuild image to use.'
    Default: 'aws/codebuild/standard:2.0'

  BuildSpecFile:
    Type: String
    Description: 'Name of Buildspec file'
    Default: 'buildspec.yaml'

  DevAwsAccountId:
    Type: String
    Description: 'Development account Account Id'
    Default: 374033061612

  TestAwsAccountId:
    Type: String
    Description: 'Development account Account Id'
    Default: 679040287312

  SamTranslationBucket:
    Type: AWS::SSM::Parameter::Value<String>
    Description: 'IAM role ARN for pipeline'
    Default: '/deploy-pipeline/prime/SamTranslationBucketName'


  ArtifactsBucket:
    Type: AWS::SSM::Parameter::Value<String>
    Description: 'IAM role ARN for pipeline'
    Default: '/deploy-pipeline/prime/ArtifactBucketName'

  ArtifactBucketKeyId:
    Description: 'ARN of the artifact bucket KMS key'
    Type: AWS::SSM::Parameter::Value<String>
    Default: '/deploy-pipeline/prime/ArtifactBucketKeyId'

  CodeRepoCreate:
    Type: String
    Description: 'Create CodeCommit Repo'
    AllowedValues:
      - true
      - false
    Default: true


Conditions:
  CreateCodeRepo: !Equals [!Ref CodeRepoCreate, true]


Resources:
  CodeRepository:
    Type: 'AWS::CodeCommit::Repository'
    Condition: CreateCodeRepo
    Properties:
      RepositoryName: !Sub "${ServiceName}-${Environment}"
      RepositoryDescription: !Sub '${ServiceName}-${Environment} service repository'


  CodeBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub "${ServiceName}-${Environment}"
      Description: !Sub 'Build project for the ${ServiceName}-${Environment}'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Ref BuildImage
        EnvironmentVariables:
          - Name: BUILD_OUTPUT_BUCKET
            Value: !Ref ArtifactsBucket
          - Name: ENV
            Value: !Ref Environment
          - Name: AWS_ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: BUCKET
            Value: !Ref SamTranslationBucket
      Cache:
        Type: S3
        Location: !Sub ${ArtifactsBucket}/codebuild-cache
      ServiceRole: !Ref PipelineServiceRoleArn
      EncryptionKey: !Ref ArtifactBucketKeyId
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Ref BuildSpecFile
      Tags:
        - Key: Stack
          Value: !Ref AWS::StackName
        - Key: Project
          Value: !Sub "${ServiceName}-${Environment}"

  Pipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      ArtifactStore:
        Location: !Ref ArtifactsBucket
        Type: S3
        EncryptionKey:
          Id: !Ref ArtifactBucketKeyId
          Type: KMS
      Name: !Sub "${ServiceName}-${Environment}"
      RoleArn: !Ref PipelineServiceRoleArn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceCodeRepo
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              Configuration:
                RepositoryName: !GetAtt CodeRepository.Name
                BranchName: !Ref BranchName
              OutputArtifacts:
                - Name: SourceCodeAsZip
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceCodeAsZip
              OutputArtifacts:
                - Name: BuildArtifactAsZip
              RunOrder: 1

        # Integrate pipeline here.
        - Name: DevDeploy
          Actions:
            - Name: CreateChangeSet
              RunOrder: 1
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !Sub arn:aws:iam::${DevAwsAccountId}:role/CodePipelineDeploymentRole-${AWS::Region}-${DevAwsAccountId}-prime
                StackName: !Sub "${ServiceName}-${Environment}"
                ChangeSetName: !Sub '${ServiceName}-ChangeSet-Dev-${Environment}'
                TemplatePath: 'BuildArtifactAsZip::packaged-template.yaml'
                ParameterOverrides: !Sub '{ "Environment": "${Environment}" }'
                Capabilities: CAPABILITY_IAM
              InputArtifacts:
                - Name: BuildArtifactAsZip
              RoleArn: !Sub arn:aws:iam::${DevAwsAccountId}:role/CodePipelineServiceRole-${AWS::Region}-${DevAwsAccountId}-prime
            - Name: ExecuteChangeSet
              RunOrder: 2
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !Sub arn:aws:iam::${DevAwsAccountId}:role/CodePipelineDeploymentRole-${AWS::Region}-${DevAwsAccountId}-prime
                StackName: !Sub '${ServiceName}-${Environment}'
                ChangeSetName: !Sub '${ServiceName}-ChangeSet-Dev-${Environment}'
              OutputArtifacts:
                - Name: !Sub '${ServiceName}DevChangeSet'
              RoleArn: !Sub arn:aws:iam::${DevAwsAccountId}:role/CodePipelineServiceRole-${AWS::Region}-${DevAwsAccountId}-prime
        - Name: TestDeploy
          Actions:
            - Name: CreateChangeSet
              RunOrder: 1
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !Sub arn:aws:iam::${TestAwsAccountId}:role/CodePipelineDeploymentRole-${AWS::Region}-${TestAwsAccountId}-prime
                StackName: !Sub '${ServiceName}-${Environment}'
                ChangeSetName: !Sub '${ServiceName}-ChangeSet-Test-${Environment}'
                TemplatePath: 'BuildArtifactAsZip::packaged-template.yaml'
                ParameterOverrides: !Sub '{ "Environment": "${Environment}" }'
                Capabilities: CAPABILITY_IAM
              InputArtifacts:
                - Name: BuildArtifactAsZip
              RoleArn: !Sub arn:aws:iam::${TestAwsAccountId}:role/CodePipelineServiceRole-${AWS::Region}-${TestAwsAccountId}-prime
            - Name: ExecuteChangeSet
              RunOrder: 2
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !Sub arn:aws:iam::${TestAwsAccountId}:role/CodePipelineDeploymentRole-${AWS::Region}-${TestAwsAccountId}-prime
                StackName: !Sub '${ServiceName}-${Environment}'
                ChangeSetName: !Sub '${ServiceName}-ChangeSet-Test-${Environment}'
              OutputArtifacts:
                - Name: !Sub '${ServiceName}TestChangeSet'
              RoleArn: !Sub arn:aws:iam::${TestAwsAccountId}:role/CodePipelineServiceRole-${AWS::Region}-${TestAwsAccountId}-prime
        # Integrate TEST deploy
        # Notify Slack

Outputs:
  CodeCommitRepositoryHttpUrl:
    Description: 'AWS CodeCommit Git repository'
    Value: !GetAtt CodeRepository.CloneUrlHttp

  CodeCommitRepositorySshUrl:
    Description: 'AWS CodeCommit Git repository'
    Value: !GetAtt CodeRepository.CloneUrlSsh

  CodeBuildProject:
    Description: 'CodeBuild Project name'
    Value: !Ref CodeBuildProject

  CodePipeline:
    Description: 'AWS CodePipeline pipeline name'
    Value: !Ref Pipeline

